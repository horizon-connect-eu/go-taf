{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$wrapper": "https://connect.informatik.uni-ulm.de/coordination/taf-implementation/-/tree/main/TAF_External_Interfaces/Messaging/GENERIC_REQUEST/",
  "$response": "https://connect.informatik.uni-ulm.de/coordination/taf-implementation/-/tree/main/TAF_External_Interfaces/Messaging/TCH_TC_RESPONSE/",
  "$id": "https://connect.informatik.uni-ulm.de/coordination/taf-implementation/-/tree/main/TAF_External_Interfaces/Messaging/TCH_TC_REQUEST/",
  "title": "TCH_TC_REQUEST",
  "type": "object",
  "properties": {
    "query": {
      "type": "array",
      "description": "A non-empty list of trustee devices and associated claims as targets.",
      "items": {
        "type": "object",
        "description": "A query record with trustee identifier and claims.",
        "properties": {
          "trusteeID": {
            "description": "This identifier corresponds to the pseudonym associated with an ego vehicle.",
            "type": "string"
          },
          "tchNotifyDestinationTopics": {
            "description": "List of kafka topic identifiers where the TCH_NOTIFY message shall be sent.",
            "type": "array",
            "items": {
              "type": "string",
              "description": "Kafka topic identifier that receives the TCH_NOTIFY message (e.g., uc2.vehicle-1.taf)"
            }
          },
          "requestedClaims": {
            "description": "A list of specific claims that are requested. If empty, all available claims should be reported.",
            "type": "array",
            "items": {
              "type": "object",
              "description": "A list of requested claims along with a debug flag",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the requested claim"
                },
                "debug": {
                  "type": "integer",
                  "description": "The value to be emulated within the TCH_NOTIFY. If not specified, TCH will fetch the actual appraisal related to this claim"
                }
              }
            },
            "minItems": 0
          }
        },
        "required": [
          "trusteeID",
          "requestedClaims"
        ]
      },
      "minItems": 1
    },
    "evidence": {
      "type": "object",
      "properties": {
        "timestamp": {
          "description": "Request creation date in UTC. To be provided by the MBD crypto library.",
          "type": "string"
        },
        "nonce": {
          "description": "Challenge in HEX format. To be provided by the MBD crypto library.",
          "type": "string"
        },
        "signatureAlgorithmType": {
          "description": "Signing algorithm. To be provided by the MBD crypto library.",
          "type": "string"
        },
        "signature": {
          "description": "Signature of the query structure and the rest of the evidence attributes. To be provided by the MBD crypto library.",
          "type": "string"
        },
        "keyRef": {
          "description": "Identifier to the public key associated with the MBD component. To be provided by the MBD crypto library.",
          "type": "string"
        }
      },
      "required": [
        "timestamp",
        "nonce",
        "signatureAlgorithmType",
        "signature",
        "keyRef"
      ]
    }
  },
  "required": [
    "query"
  ]
}
